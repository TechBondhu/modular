// тЬЕ src/ruleflow.js
import { displayMessage } from './uiUtils.js';
import { displayReview } from './reviewUtils.js';
import { saveChatHistory } from './chatHistory.js';

// --------------------------------------
// ЁЯФ╣ ржлрзНрж▓рзЛ ржбрж┐ржлрж╛ржЗржи
// --------------------------------------
export const flows = {
  nid_apply: {
    start: {
      question: "ржЖржкржирж╛рж░ ржХрж╛ржЫрзЗ ржХрж┐ Birth Registration ржмрж╛ SSC Marksheet ржЖржЫрзЗ?",
      type: "yesno",
      yes: "upload_docs",
      no: "nid_long_form"
    },
    upload_docs: {
      question: "ржжржпрж╝рж╛ ржХрж░рзЗ Birth Registration ржмрж╛ SSC Marksheet ржПрж░ ржЫржмрж┐ ржЖржкрж▓рзЛржб ржХрж░рзБржи ЁЯУД",
      type: "file",
      next: "nid_short_form"
    },
    nid_short_form: {
      question: "ржжржпрж╝рж╛ ржХрж░рзЗ ржЖржкржирж╛рж░ ржорзЛржмрж╛ржЗрж▓ ржирж╛ржорзНржмрж╛рж░ рж▓рж┐ржЦрзБржи:",
      type: "text",
      next: "review"
    },
    nid_long_form: {
      question: "ржЖржкржирж╛рж░ ржПржХржЯрж┐ ржЫржмрж┐ ржЖржкрж▓рзЛржб ржХрж░рзБржи ЁЯкк",
      type: "file",
      next: "nid_name"
    },
    nid_name: {
      question: "ржЖржкржирж╛рж░ ржкрзВрж░рзНржг ржирж╛ржо рж▓рж┐ржЦрзБржи:",
      type: "text",
      next: "father_name"
    },
    father_name: {
      question: "ржЖржкржирж╛рж░ ржмрж╛ржмрж╛рж░ ржирж╛ржо рж▓рж┐ржЦрзБржи:",
      type: "text",
      next: "mother_name"
    },
    mother_name: {
      question: "ржЖржкржирж╛рж░ ржорж╛ржпрж╝рзЗрж░ ржирж╛ржо рж▓рж┐ржЦрзБржи:",
      type: "text",
      next: "dob"
    },
    dob: {
      question: "ржЖржкржирж╛рж░ ржЬржирзНржо рждрж╛рж░рж┐ржЦ рж▓рж┐ржЦрзБржи (DD-MM-YYYY):",
      type: "text",
      next: "address"
    },
    address: {
      question: "ржЖржкржирж╛рж░ ржмрж░рзНрждржорж╛ржи ржарж┐ржХрж╛ржирж╛ рж▓рж┐ржЦрзБржи:",
      type: "text",
      next: "review"
    },
    review: { type: "review" }
  }
};

// --------------------------------------
// ЁЯФ╣ рж╕рзНржЯрзЗржЯ ржЯрзНрж░рзНржпрж╛ржХрж┐ржВ
// --------------------------------------
let activeFlow = null;
let currentStep = null;
let userData = {};
let isReviewMode = false;

// --------------------------------------
// тЬЕ ржлрзНрж▓рзЛ рж╢рзБрж░рзБ (рж╕рзНржЯрзЗржЯ рж░рж┐рж╕рзЗржЯ ржирж┐рж╢рзНржЪрж┐ржд ржХрж░рж╛)
// --------------------------------------
export function startFlow(flowName) {
  console.log(`ЁЯЯв [FLOW START] ${flowName}`);
  // ржкрзНрж░рждрж┐ржмрж╛рж░ ржирждрзБржи ржлрзНрж▓рзЛ рж╢рзБрж░рзБрждрзЗ рж╕рзНржЯрзЗржЯ рж░рж┐рж╕рзЗржЯ ржХрж░рзЛ
  activeFlow = flows[flowName];
  currentStep = "start";
  userData = {};
  isReviewMode = false;

  const firstQ = activeFlow[currentStep]?.question;
  if (firstQ) {
    displayMessage(firstQ, 'bot', 'left');
    saveChatHistory(firstQ, 'bot', 'left');
  } else {
    console.error("тЭМ Flow start question not found!");
  }
}

// --------------------------------------
// тЬЕ ржЗржиржкрзБржЯ/ржЗржорзЗржЬ рж╣рзНржпрж╛ржирзНржбрж▓
// --------------------------------------
export function handleFormFlow(userMessage, uploadedFile = null) {
  // ржпржжрж┐ NID рж░рж┐рж▓рзЗржЯрзЗржб ржорзЗрж╕рзЗржЬ рж╣ржпрж╝ ржПржмржВ ржлрзНрж▓рзЛ рж╢рзБрж░рзБ ржирж╛ рж╣ржпрж╝рзЗ ржерж╛ржХрзЗ, рждрж╛рж╣рж▓рзЗ ржЕржЯрзЛ-рж╕рзНржЯрж╛рж░рзНржЯ
  if (!activeFlow && userMessage.includes('ржПржиржЖржЗржбрж┐') && userMessage.includes('рждрзИрж░рж┐ ржХрж░рждрзЗ ржЪрж╛ржЗ')) {
    startFlow('nid_apply');
    return; // ржлрзНрж▓рзЛ рж╢рзБрж░рзБ ржХрж░рзЗ ржлрж┐рж░рзЗ ржпрж╛ржУ, ржкрж░ржмрж░рзНрждрзА ржорзЗрж╕рзЗржЬ рж╣рзНржпрж╛ржирзНржбрзЗрж▓ ржХрж░ржмрзЗ
  }

  if (!activeFlow || !currentStep) {
    displayMessage("ржжрзБржГржЦрж┐ржд, ржлрзНрж▓рзЛ рж╢рзБрж░рзБ ржХрж░рзБржи ржмрж╛ рж╕ржарж┐ржХ ржорзЗрж╕рзЗржЬ ржкрж╛ржарж╛ржиред", 'bot', 'left');
    return;
  }

  const step = activeFlow[currentStep];
  console.log(`тЮбя╕П [STEP] ${currentStep} (${step.type}) | msg: ${userMessage ? userMessage.slice(0, 20) + "..." : "file"}`);

  // ЁЯФ╣ ржЗржорзЗржЬ ржлрж╛ржЗрж▓ ржЗржиржкрзБржЯ рж╣рзНржпрж╛ржирзНржбрж▓ ржХрж░рж╛
  if (step.type === "file" && uploadedFile) {
    console.log("ЁЯУ╕ File received:", uploadedFile.name);

    const reader = new FileReader();
    reader.onload = function (e) {
      const imageUrl = e.target.result;
      userData[currentStep] = imageUrl; // base64 рж╣рж┐рж╕рзЗржмрзЗ рж╕ржВрж░ржХрзНрж╖ржг

      displayMessage("тЬЕ ржлрж╛ржЗрж▓ ржЖржкрж▓рзЛржб рж╕ржорзНржкржирзНржи рж╣ржпрж╝рзЗржЫрзЗ!", "bot", "left");
      saveChatHistory("тЬЕ ржлрж╛ржЗрж▓ ржЖржкрж▓рзЛржб рж╕ржорзНржкржирзНржи рж╣ржпрж╝рзЗржЫрзЗ!", "bot", "left");
      console.log("ЁЯЦ╝я╕П Image stored in userData:", imageUrl.slice(0, 40) + "...");

      currentStep = step.next; // ржкрж░ржмрж░рзНрждрзА рж╕рзНржЯрзЗржкрзЗ ржпрж╛ржУржпрж╝рж╛
      moveToNextStep(); // рж╕ржарж┐ржХржнрж╛ржмрзЗ ржкрж░ржмрж░рзНрждрзА рж╕рзНржЯрзЗржк ржЯрзНрж░рж┐ржЧрж╛рж░
    };

    reader.onerror = function () {
      console.error("тЭМ File read error");
      displayMessage("ржлрж╛ржЗрж▓ ржЖржкрж▓рзЛржбрзЗ рж╕ржорж╕рзНржпрж╛ рж╣ржпрж╝рзЗржЫрзЗ, ржЖржмрж╛рж░ ржЪрзЗрж╖рзНржЯрж╛ ржХрж░рзБржиред", "bot", "left");
      saveChatHistory("ржлрж╛ржЗрж▓ ржЖржкрж▓рзЛржбрзЗ рж╕ржорж╕рзНржпрж╛ рж╣ржпрж╝рзЗржЫрзЗ, ржЖржмрж╛рж░ ржЪрзЗрж╖рзНржЯрж╛ ржХрж░рзБржиред", "bot", "left");
    };

    reader.readAsDataURL(uploadedFile);
    return; // ржЕрзНржпрж╛рж╕рж┐ржиржХрзНрж░рзЛржирж╛рж╕ ржкрзНрж░ржХрзНрж░рж┐ржпрж╝рж╛ рж╢рзБрж░рзБ рж╣ржУржпрж╝рж╛рж░ ржкрж░ ржлрж╛ржВрж╢ржи ржерзЗржХрзЗ ржмрзЗрж░рж┐ржпрж╝рзЗ ржпрж╛ржУ
  }

  // ЁЯФ╣ ржЯрзЗржХрзНрж╕ржЯ ржЗржиржкрзБржЯ ржмрж╛ рж╣рзНржпрж╛ржБ-ржирж╛ ржЗржиржкрзБржЯ
  if (step.type === "text") {
    userData[currentStep] = userMessage;
  } else if (step.type === "yesno") {
    const lowerMessage = userMessage.toLowerCase();
    if (lowerMessage.includes('рж╣рзНржпрж╛ржБ') || lowerMessage.includes('рж╣рж╛') || lowerMessage.includes('yes') || lowerMessage.includes('ржЖржЫрзЗ')) {
      currentStep = step.yes;
    } else if (lowerMessage.includes('ржирж╛') || lowerMessage.includes('no') || lowerMessage.includes('ржирзЗржЗ')) {
      currentStep = step.no;
    } else {
      // ржЕрзНржпрж╛ржирж╕рж╛рж░ ржирж╛ ржорзНржпрж╛ржЪ ржХрж░рж▓рзЗ рж░рж┐-ржкрзНрж░ржорзНржкржЯ
      displayMessage("ржжрзБржГржЦрж┐ржд, ржЖржкржирж╛рж░ ржЙрждрзНрждрж░ ржмрзБржЭрждрзЗ ржкрж╛рж░рж┐ржирж┐ред ржжржпрж╝рж╛ ржХрж░рзЗ 'рж╣рзНржпрж╛ржБ' ржмрж╛ 'ржирж╛' ржмрж▓рзБржиред", "bot", "left");
      saveChatHistory("ржжрзБржГржЦрж┐ржд, ржЖржкржирж╛рж░ ржЙрждрзНрждрж░ ржмрзБржЭрждрзЗ ржкрж╛рж░рж┐ржирж┐ред ржжржпрж╝рж╛ ржХрж░рзЗ 'рж╣рзНржпрж╛ржБ' ржмрж╛ 'ржирж╛' ржмрж▓рзБржиред", "bot", "left");
      return; // рж░рж┐-ржкрзНрж░ржорзНржкржЯ ржХрж░рзЗ ржлрж┐рж░рзЗ ржпрж╛ржУ
    }
  }

  // ЁЯФ╣ ржирзЗржХрзНрж╕ржЯ рж╕рзНржЯрзЗржк ржирж┐рж░рзНржзрж╛рж░ржг (yes/no ржПрж░ ржкрж░)
  if (step.type === "text" || step.type === "file") {
    currentStep = step.next;
  }

  // ЁЯФ╣ рж░рж┐ржнрж┐ржЙ ржлрзЗржЬ
  if (currentStep === "review" && !isReviewMode) {
    console.log("ЁЯЯй Auto Review Phase Starting...");
    isReviewMode = true;
    showNidReview(userData);
    return;
  }

  // ЁЯФ╣ ржкрж░ржмрж░рзНрждрзА ржкрзНрж░рж╢рзНржи
  moveToNextStep();
}

// --------------------------------------
// тЬЕ рж╣рзЗрж▓рзНржкрж╛рж░ тАФ ржкрж░ржмрж░рзНрждрзА ржкрзНрж░рж╢рзНржи
// --------------------------------------
function moveToNextStep() {
  const nextStep = activeFlow[currentStep];
  if (nextStep && nextStep.question && !isReviewMode) {
    displayMessage(nextStep.question, "bot", "left");
    saveChatHistory(nextStep.question, "bot", "left");
    console.log(`ЁЯЯв Next question: ${nextStep.question}`);

    // ржпржжрж┐ ржлрж╛ржЗрж▓ ржЗржиржкрзБржЯ рж╣ржпрж╝ рждрж╛рж╣рж▓рзЗ ржлрж╛ржЗрж▓ ржЖржкрж▓рзЛржб UI ржпрзЛржЧ ржХрж░рзЛ
    if (nextStep.type === "file") {
      addFileUploadInput();
    }
  } else {
    console.log("тД╣я╕П No further question or review started.");
  }
}

// --------------------------------------
// тЬЕ ржлрж╛ржЗрж▓ ржЖржкрж▓рзЛржб ржЗржиржкрзБржЯ рждрзИрж░рж┐
// --------------------------------------
function addFileUploadInput() {
  const uploadContainer = document.createElement("div");
  uploadContainer.classList.add("file-upload-container", "slide-in");

  const fileInput = document.createElement("input");
  fileInput.type = "file";
  fileInput.accept = "image/*";
  fileInput.classList.add("upload-input");

  const uploadLabel = document.createElement("label");
  uploadLabel.textContent = "ЁЯУд ржПржЦрж╛ржирзЗ ржЖржкржирж╛рж░ ржЫржмрж┐ ржмрж╛ ржбржХрзБржорзЗржирзНржЯ ржЖржкрж▓рзЛржб ржХрж░рзБржи";
  uploadLabel.classList.add("upload-label");

  uploadContainer.appendChild(uploadLabel);
  uploadContainer.appendChild(fileInput);

  document.querySelector(".messages.left")?.appendChild(uploadContainer);

  fileInput.addEventListener("change", (e) => {
    const file = e.target.files[0];
    if (file) {
      handleFormFlow("", file); // ржЗржорзЗржЬ ржкрж╛рж╕ ржХрж░рзЗ ржкрж╛ржарж╛ржирзЛ
      uploadContainer.remove();
    }
  });
}

// --------------------------------------
// тЬЕ рж░рж┐ржнрж┐ржЙ (рждрзЛржорж╛рж░ reviewUtils.js рж╕рж┐рж╕рзНржЯрзЗржо ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ)
// --------------------------------------
function showNidReview(formData) {
  console.log("ЁЯУЛ Showing NID Review (from reviewUtils.js)");
  console.log("ЁЯз╛ FormData Snapshot:", JSON.stringify(formData, null, 2));

  const reviewData = {
    ржирж╛ржо: formData.nid_name || '',
    ржкрж┐рждрж╛: formData.father_name || '',
    ржорж╛рждрж╛: formData.mother_name || '',
    ржЬржирзНржо_рждрж╛рж░рж┐ржЦ: formData.dob || '',
    ржарж┐ржХрж╛ржирж╛: formData.address || '',
    ржорзЛржмрж╛ржЗрж▓: formData.nid_short_form || '',
    ржбржХрзБржорзЗржирзНржЯ: formData.upload_docs || '',
    ржЖржмрзЗржжржиржХрж╛рж░рзАрж░_ржЫржмрж┐: formData.nid_long_form || '', // long form image
    form_type: "NID Apply"
  };

  displayMessage("ржирж┐ржЪрзЗ ржЖржкржирж╛рж░ ржжрзЗржУржпрж╝рж╛ рждржерзНржпржЧрзБрж▓рзЛ ржпрж╛ржЪрж╛ржЗ ржХрж░рзБржи ЁЯСЗ", "bot", "left");
  saveChatHistory("ржирж┐ржЪрзЗ ржЖржкржирж╛рж░ ржжрзЗржУржпрж╝рж╛ рждржерзНржпржЧрзБрж▓рзЛ ржпрж╛ржЪрж╛ржЗ ржХрж░рзБржи ЁЯСЗ", "bot", "left");
  displayReview(reviewData, "left");
  saveChatHistory("рж░рж┐ржнрж┐ржЙ ржкрзНрж░ржжрж░рзНрж╢ржи ржХрж░рж╛ рж╣ржпрж╝рзЗржЫрзЗ", "bot", "left");

  console.log("тЬЕ Review rendered successfully.");
}
