// тЬЕ src/ruleflow.js
import { displayMessage } from './uiUtils.js';
import { displayReview } from './reviewUtils.js';
import { saveChatHistory } from './chatHistory.js';

// --------------------------------------
// ЁЯФ╣ рж╕ржм рж░рзБрж▓-ржмрзЗржЗржЬржб ржлрзНрж▓рзЛ ржбрж┐ржлрж╛ржЗржи ржХрж░рж╛
// --------------------------------------
export const flows = {
  nid_apply: {
    start: {
      question: "ржЖржкржирж╛рж░ ржХрж╛ржЫрзЗ ржХрж┐ Birth Registration ржПржмржВ SSC Marksheet ржЖржЫрзЗ?",
      type: "yesno",
      yes: "upload_docs",
      no: "nid_long_form"
    },
    upload_docs: {
      question: "ржжрзЯрж╛ ржХрж░рзЗ Birth Registration ржПржмржВ SSC Marksheet ржЖржкрж▓рзЛржб ржХрж░рзБржиред",
      type: "file",
      next: "nid_short_form"
    },
    nid_short_form: {
      question: "ржжрзЯрж╛ ржХрж░рзЗ ржЖржкржирж╛рж░ ржорзЛржмрж╛ржЗрж▓ ржирж╛ржорзНржмрж╛рж░ рж▓рж┐ржЦрзБржи:",
      type: "text",
      next: "review"
    },
    nid_long_form: {
      question: "ржЖржкржирж╛рж░ ржкрзВрж░рзНржг ржирж╛ржо рж▓рж┐ржЦрзБржи:",
      type: "text",
      next: "father_name"
    },
    father_name: {
      question: "ржЖржкржирж╛рж░ ржмрж╛ржмрж╛рж░ ржирж╛ржо рж▓рж┐ржЦрзБржи:",
      type: "text",
      next: "mother_name"
    },
    mother_name: {
      question: "ржЖржкржирж╛рж░ ржорж╛рзЯрзЗрж░ ржирж╛ржо рж▓рж┐ржЦрзБржи:",
      type: "text",
      next: "dob"
    },
    dob: {
      question: "ржЖржкржирж╛рж░ ржЬржирзНржо рждрж╛рж░рж┐ржЦ рж▓рж┐ржЦрзБржи (DD-MM-YYYY):",
      type: "text",
      next: "address"
    },
    address: {
      question: "ржЖржкржирж╛рж░ ржмрж░рзНрждржорж╛ржи ржарж┐ржХрж╛ржирж╛ рж▓рж┐ржЦрзБржи:",
      type: "text",
      next: "review"
    },
    review: { type: "review" }
  }
};

// --------------------------------------
// ЁЯФ╣ рж╕рзНржЯрзЗржЯ ржЯрзНрж░рзНржпрж╛ржХрж┐ржВ
// --------------------------------------
let activeFlow = null;
let currentStep = null;
let userData = {};
let isReviewMode = false;

// --------------------------------------
// тЬЕ ржлрзНрж▓рзЛ рж╢рзБрж░рзБ
// --------------------------------------
export function startFlow(flowName) {
  console.log(`ЁЯЯв [FLOW START] ${flowName}`);
  activeFlow = flows[flowName];
  currentStep = "start";
  userData = {};
  isReviewMode = false;

  const firstQ = activeFlow[currentStep]?.question;
  if (firstQ) displayMessage(firstQ, 'bot', 'left');
  else console.error("тЭМ Flow start question not found!");
}

// --------------------------------------
// тЬЕ ржЗржЙржЬрж╛рж░рзЗрж░ ржЗржиржкрзБржЯ рж╣рзНржпрж╛ржирзНржбрж▓ ржХрж░рж╛
// --------------------------------------
export function handleFormFlow(userMessage) {
  if (!activeFlow || !currentStep) return;

  const step = activeFlow[currentStep];
  console.log(`тЮбя╕П [STEP] ${currentStep} (${step.type}) | msg: ${userMessage}`);

  // ЁЯФ╕ ржбрзЗржЯрж╛ рж╕ржВрж░ржХрзНрж╖ржг
  if (step.type === "text" || step.type === "yesno") {
    userData[currentStep] = userMessage;
  } else if (step.type === "file") {
    userData[currentStep] = "[Uploaded File]";
  }

  // ЁЯФ╕ ржирзЗржХрзНрж╕ржЯ рж╕рзНржЯрзЗржк ржирж┐рж░рзНржзрж╛рж░ржг
  if (step.type === "yesno") {
    if (userMessage.includes("рж╣рзНржпрж╛ржБ") || userMessage.toLowerCase().includes("yes")) {
      currentStep = step.yes;
    } else {
      currentStep = step.no;
    }
  } else if (step.type === "file" || step.type === "text") {
    currentStep = step.next;
  }

  // ЁЯФ╕ ржпржжрж┐ ржкрж░ржмрж░рзНрждрзА рж╕рзНржЯрзЗржк review рж╣рзЯ тЖТ ржЕржЯрзЛржорзЗржЯрж┐ржХ рж░рж┐ржнрж┐ржЙ ржЪрж╛рж▓рзБ ржХрж░рзЛ
  if (currentStep === "review" && !isReviewMode) {
    console.log("ЁЯЯй Auto Review Phase Starting...");
    isReviewMode = true;
    showNidReview(userData);
    return; // тЪб ржЖрж░ ржкрж░ржмрж░рзНрждрзА ржкрзНрж░рж╢рзНржи ржирж╛ ржжрзЗржЦрж╛ржирзЛ
  }

  // ЁЯФ╕ ржкрж░ржмрж░рзНрждрзА ржкрзНрж░рж╢рзНржи ржжрзЗржЦрж╛ржирзЛ (ржпржжрж┐ ржерж╛ржХрзЗ)
  const nextStep = activeFlow[currentStep];
  if (nextStep && nextStep.question && !isReviewMode) {
    displayMessage(nextStep.question, 'bot', 'left');
  } else {
    console.log("тД╣я╕П No further question found or review started.");
  }
}

// --------------------------------------
// тЬЕ ржкрзБрж░ржирзЛ reviewUtils.js рж╕рж┐рж╕рзНржЯрзЗржо ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ рж░рж┐ржнрж┐ржЙ ржжрзЗржЦрж╛ржирзЛ
// --------------------------------------
function showNidReview(formData) {
  console.log("ЁЯУЛ Showing NID Review (from reviewUtils.js)");
  console.log("ЁЯз╛ FormData Snapshot:", JSON.stringify(formData, null, 2));

  // ЁЯФ╣ ржлрж░рзНржо ржбрзЗржЯрж╛ рж╕рж╛ржЬрж╛ржирзЛ
  const reviewData = {
    ржирж╛ржо: formData.nid_long_form || '',
    ржкрж┐рждрж╛: formData.father_name || '',
    ржорж╛рждрж╛: formData.mother_name || '',
    ржЬржирзНржо_рждрж╛рж░рж┐ржЦ: formData.dob || '',
    ржарж┐ржХрж╛ржирж╛: formData.address || '',
    ржорзЛржмрж╛ржЗрж▓: formData.nid_short_form || '',
    ржбржХрзБржорзЗржирзНржЯ: formData.upload_docs || '',
    form_type: "NID Apply"
  };

  // ЁЯФ╣ UI рждрзЗ ржорзЗрж╕рзЗржЬ ржУ рж░рж┐ржнрж┐ржЙ ржкрзНрж░ржжрж░рзНрж╢ржи
  displayMessage("ржирж┐ржЪрзЗ ржЖржкржирж╛рж░ ржжрзЗржУрзЯрж╛ рждржерзНржпржЧрзБрж▓рзЛ ржпрж╛ржЪрж╛ржЗ ржХрж░рзБржи ЁЯСЗ", "bot", "left");
  displayReview(reviewData, "left");
  saveChatHistory("рж░рж┐ржнрж┐ржЙ ржкрзНрж░ржжрж░рзНрж╢ржи ржХрж░рж╛ рж╣ржпрж╝рзЗржЫрзЗ", "bot", "left");

  console.log("тЬЕ Review rendered successfully using existing UI system.");
}
